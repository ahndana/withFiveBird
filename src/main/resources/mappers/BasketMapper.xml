<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="BasketMapper">
	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
	<resultMap id="basketMap"
		type="study.spring.withfivebird.model.Basket">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="basket_no" column="basket_no" />
		<result property="product_no"
			column="product_no" />
		<result property="user_no"
			column="user_no" />
		<result property="basket_color"
			column="basket_color" />
		<result property="basket_num"
			column="basket_num" />
		<result property="basket_size" column="basket_size" />
	</resultMap>

	<!-- 단일행 조회를 위한 기능 정의 -->
	<select id="selectItem"
		parameterType="study.spring.withfivebird.model.Basket"
		resultMap="basketMap">
		SELECT basket_no, product_no,
		user_no, basket_color, basket_num,
		basket_size FROM basket WHERE
		basket_no=#{basket_no};
	</select>
	<!-- 다중행 조회를 위한 기능 정의 -->
	<select id="selectList"
		parameterType="study.spring.withfivebird.model.Basket"
		resultMap="basketMap">
		SELECT basket_no, product_no,
		user_no, basket_color, basket_num,
		basket_size FROM basket

		<where>
			<if
				test="basket_color != null and basket_color != ''">
				basket_color LIKE concat('%', #{basket_color},
				'%')
			</if>

			<if
				test="basket_size != null and basket_size != ''">
				OR basket_size LIKE concat('%',
				#{basket_size}, '%')
			</if>
		</where>

		ORDER BY basket_no DESC
	</select>

	<!-- 데이터 저장을 위한 기능 정의 -->
	<insert id="insertItem"
		parameterType="study.spring.withfivebird.model.Basket"
		useGeneratedKeys="true" keyProperty="basket_no">
		INSERT INTO basket
		(basket_no, product_no,
		user_no, basket_color, basket_num,
		basket_size) VALUES
		(#{basket_no},#{product_no},#{user_no},#{basket_color},#{basket_num}, #{basket_size});
	</insert>
	<!-- 데이터 삭제를 위한 기능 정의 -->
	<delete id="deleteItem"
		parameterType="study.spring.withfivebird.model.Basket">
		DELETE FROM basket WHERE basket_no=#{basket_no};
	</delete>

	<!-- 데이터 갱신을 위한 기능 정의 -->
	<update id="updateItem"
		parameterType="study.spring.withfivebird.model.Basket">
		UPDATE basket SET basket_color=#{basket_color}
		WHERE basket_no=#{basket_no};
	</update>
	<!-- 데이터 수 조회하기 -->
	<!-- 조건에 맞는 데이터 수를 집계하여 int 타입으로 반환한다. count, max, min, sum, avg 함수를 사용한 
		경우 Mapper에서는 resultMap이 아닌 resultType으로 반환한다. -->
	<select id="selectCountAll"
		parameterType="study.spring.withfivebird.model.Basket"
		resultType="int">
		SELECT COUNT(*) FROM basket

		<where>
			<if
				test="basket_color != null and basket_color != ''">
				basket_color LIKE concat('%', #{basket_color},
				'%')
			</if>

			<if
				test="basket_size != null and basket_size != ''">
				OR basket_size LIKE concat('%',
				#{basket_size}, '%')
			</if>
		</where>


	</select>
</mapper>