<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="ProductSizeMapper">

	<!-- Beans 클래스의 객체이름(id)와 클래스이름(type)을 명시한다. -->
	<resultMap id="productSizeMap" type="study.spring.withfivebird.model.ProductSize">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="product_size_no" column="product_size_no" />
		<result property="product_size_name" column="product_size_name" />
	</resultMap>
	
	<!-- 단일행 조회를 위한 기능 정의 -->
	<select id="selectItem" parameterType="study.spring.withfivebird.model.ProductSize"
		resultMap="productSizeMap">
		SELECT product_size_no, product_size_name FROM product_size WHERE product_size_no=#{product_size_no};
	</select>
	
	<!-- 다중행 조회를 위한 기능 정의 -->
	<select id="selectList"
		parameterType="study.spring.withfivebird.model.ProductSize"
		resultMap="productSizeMap">
		SELECT product_size_no, product_size_name FROM product_size
		<where>
			<if test="product_size_name != null and product_size_name != ''">
				product_size_name LIKE concat('%', #{product_size_name}, '%')
			</if>
		</where>
		
		ORDER BY product_size_no DESC
	</select>
	
	<!-- 데이터 저장을 위한 기능 정의 -->
	<insert id="insertItem"
		parameterType="study.spring.withfivebird.model.ProductSize"
		useGeneratedKeys="true"
		keyProperty="product_size_no">
		INSERT INTO product_size (product_size_name) VALUES (#{product_size_name});
	</insert>

	
	<!-- 데이터 삭제를 위한 기능 정의 -->
	<delete id="deleteItem" parameterType="study.spring.withfivebird.model.ProductSize">
		DELETE FROM product_size WHERE product_size_no=#{product_size_no};
	</delete>
	
	<!-- 데이터 갱신을 위한 기능 정의 -->
	<update id="updateItem" parameterType="study.spring.withfivebird.model.ProductSize">
		UPDATE product_size SET product_size_name=#{product_size_name}
		WHERE product_size_no=#{product_size_no};
	</update>
	
	<!-- 데이터 수 조회하기 -->
	<!-- 
		조건에 맞는 데이터 수를 집계하여 int 타입으로 반환한다.
		count, max, min, sum, avg 함수를 사용한 경우 Mapper에서는 
		resultMap이 아닌 resultType으로 반환한다.
	 -->
	 <select id="selectCountAll" parameterType="study.spring.withfivebird.model.ProductSize"
	 	resultType="int">
	 	
	 	SELECT COUNT(*) FROM product_size
	 	
	 	<where>
	 		<if test="product_size_name != null and product_size_name != ''">
				product_size_name LIKE concat('%', #{product_size_name}, '%')
			</if>
	 	</where>
	 </select>

</mapper>