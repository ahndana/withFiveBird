<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="LevelMapper">

	<!-- Beans 클래스의 객체이름(id)와 클래스이름(type)을 명시한다. -->
	<resultMap id="levelMap" type="study.spring.withfivebird.model.Level">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="level_no" column="level_no" />
		<result property="level_name" column="level_name" />
		<result property="level_img" column="level_img" />
	</resultMap>
	
	<!-- 단일행 조회를 위한 기능 정의 -->
	<select id="selectItem" parameterType="study.spring.withfivebird.model.Level"
		resultMap="levelMap">
		SELECT level_no, level_name, level_img FROM level WHERE level_no=#{level_no};
	</select>
	
	<!-- 다중행 조회를 위한 기능 정의 -->
	<select id="selectList"
		parameterType="study.spring.withfivebird.model.Level"
		resultMap="levelMap">
		SELECT level_no, level_name, level_img FROM level
		<where>
			<if test="level_name != null and level_name != ''">
				level_name LIKE concat('%', #{level_name}, '%')
			</if>
			
			<if test="level_img != null and level_img != ''">
				OR level_img LIKE concat('%', #{level_img}, '%')
			</if>
		</where>
		
		ORDER BY level_no DESC
	</select>
	
	<!-- 데이터 저장을 위한 기능 정의 -->
	<insert id="insertItem"
		parameterType="study.spring.withfivebird.model.Level"
		useGeneratedKeys="true"
		keyProperty="level_no">
		INSERT INTO level (level_name, level_img) VALUES (#{level_name}, #{level_img});
	</insert>
	
	<!-- 데이터 삭제를 위한 기능 정의 -->
	<delete id="deleteItem" parameterType="study.spring.withfivebird.model.Level">
		DELETE FROM level WHERE level_no=#{level_no};
	</delete>
	
	<!-- 데이터 갱신을 위한 기능 정의 -->
	<update id="updateItem" parameterType="study.spring.withfivebird.model.Level">
		UPDATE level SET level_name=#{level_name}, level_img=#{level_img}
		WHERE level_no=#{level_no};
	</update>
	
	<!-- 데이터 수 조회하기 -->
	<!-- 
		조건에 맞는 데이터 수를 집계하여 int 타입으로 반환한다.
		count, max, min, sum, avg 함수를 사용한 경우 Mapper에서는 
		resultMap이 아닌 resultType으로 반환한다.
	 -->
	 <select id="selectCountAll" parameterType="study.spring.withfivebird.model.Level"
	 	resultType="int">
	 	
	 	SELECT COUNT(*) FROM level
	 	
	 	<where>
	 		<if test="level_name != null and level_name != ''">
				level_name LIKE concat('%', #{level_name}, '%')
			</if>
			
			<if test="level_img != null and level_img != ''">
				OR level_img LIKE concat('%', #{level_img}, '%')
			</if>
	 	</where>
	 </select>

</mapper>