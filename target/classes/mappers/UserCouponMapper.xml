<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserCouponMapper">
	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
	<resultMap id="userCouponMap"
		type="study.spring.withfivebird.model.UserCoupon">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="user_coupon_no"          column="user_coupon_no" />
		<result property="user_coupon_userd"       column="user_coupon_userd" />
		<result property="user_no"                 column="user_no" />
		<result property="coupon_list_no"          column="coupon_list_no" />
		<!-- 조인 검사용 <result property="user_name"               column="user_name" />-->
	</resultMap>
	
	<!-- Join 결과를 반환 -->
	<!-- <select id="selectJoin"
			parameterType="study.spring.withfivebird.model.UserCoupon"
			resultMap="userCouponMap">
			SELECT
				user_coupon_no, user_coupon_userd, u.user_no, coupon_list_no, user_name
				FROM user as u
				INNER JOIN user_coupon as c
				ON u.user_no = c.user_no
			
			<where>
				<if test="user_coupon_userd != null and user_coupon_userd != ''">
				user_coupon_userd LIKE concat('%', #{user_coupon_userd}, '%')
			    </if>
			
				<if test="user_coupon_no != null and user_coupon_no != ''">
				user_coupon_no LIKE concat('%', #{user_coupon_no}, '%')
				</if>	
			
				<if test="coupon_list_no != null and coupon_list_no != ''">
				OR coupon_list_no LIKE concat('%', #{coupon_list_no}, '%')
				</if>
			</where>	
				
	</select> -->
	
	<!-- 단일행 조회를 위한 기능 정의 -->
	<select id="selectItem" parameterType="study.spring.withfivebird.model.UserCoupon"
		resultMap="userCouponMap">
		SELECT user_coupon_no, user_coupon_userd, user_no, coupon_list_no FROM user_coupon WHERE user_coupon_no=#{user_coupon_no};
	</select>
	
	<!--  다중행 조회를 위한 기능 정의 -->
	<select id="selectList" parameterType="study.spring.withfivebird.model.UserCoupon" 
		resultMap="userCouponMap">
		SELECT user_coupon_no, user_coupon_userd, user_no, coupon_list_no FROM user_coupon
		
		<where>
			<if test="user_coupon_userd != null and user_coupon_userd != ''">
				user_coupon_userd LIKE concat('%', #{user_coupon_userd}, '%')
			</if>
			
			<if test="user_no != null and user_no != ''">
				user_no LIKE concat('%', #{user_no}, '%')
			</if>	
			
			<if test="coupon_list_no != null and coupon_list_no != ''">
				OR coupon_list_no LIKE concat('%', #{coupon_list_no}, '%')
			</if>
		</where>
		
		ORDER BY user_coupon_no DESC
	</select>
	
	<!-- 데이터 저장을 위한 기능 정의  -->
	<insert id="insertItem" 
		parameterType="study.spring.withfivebird.model.UserCoupon"
		useGeneratedKeys="true" 
		keyProperty="user_coupon_no">		
		INSERT INTO user_coupon (user_coupon_userd, user_no, coupon_list_no) VALUES (#{user_coupon_userd}, #{user_no}, #{coupon_list_no});	
	</insert>
	
	<!--데이터 삭제를 위한 기능 정의 -->
	<delete id="deleteItem" parameterType="study.spring.withfivebird.model.UserCoupon">
		DELETE FROM user_coupon WHERE user_coupon_no=#{user_coupon_no};
	</delete>
	
	<!-- 데이터 갱신을 위한 기능 정의 -->
	<update id="updateItem" parameterType="study.spring.withfivebird.model.UserCoupon">
		UPDATE user_coupon SET user_coupon_userd=#{user_coupon_userd}, user_no=#{user_no}, coupon_list_no=#{coupon_list_no}
		WHERE user_coupon_no=#{user_coupon_no};
	</update>
	
	<!--
		데이터 수 조회하기 	
		조건에 맞는 데이터 수를 집계하여 int 타입으로 반환한다.
		count, max, min, sum, avg 함수를 사용한 경우 Mapper에서는 
		resultMap이 아닌 resultType으로 반환한다. -->
	<select id="selectCountAll" parameterType="study.spring.withfivebird.model.UserCoupon"
		resultType="int">
		
		SELECT COUNT(*) FROM user_coupon
		
		<where>
			<if test="user_coupon_userd != null and user_coupon_userd != ''">
				user_coupon_userd LIKE concat('%', #{user_coupon_userd}, '%')
			</if>
			
			<if test="coupon_list_no != null and coupon_list_no != ''">
				coupon_list_no LIKE concat('%', #{coupon_list_no}, '%')
			</if>
			
			<if test="user_no != null and user_no != ''">
				OR user_no LIKE concat('%', #{user_no}, '%')
			</if>
		</where>
		
	</select>
	
</mapper>